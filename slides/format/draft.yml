paths:
  /orders:
    post:
      summary: Create an order
      operationId: postOrder
      description: |
        This operation can be used to create an order when a patron places an order via a mobile app, tablet app, self-service kiosk, etc., depending on the API consumer's use case.
      tags:
        - Orders
      responses:
        "201":
          description: |
            Resource created successfully. The response body contains the newly created resource.

            The server logic applies to the response body as follows:

            - The default `priority` is `3` out of `5`, indicating medium priority. Restaurant staff may adjust the priority based on factors like preparation time.
            - The `status` is set to `received` for an order placed immedilatey.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          headers:
            Location:
              schema:
                type: string
              description: Points to the resource endpoint for the newly created resource
        "400":
          description: Bad request. The request was malformed or invalid.
        "401":
          description: Unauthorized. Authentication is required, or the provided credentials are invalid.
        "403":
          description: Forbidden. The server understood the request, but it refuses to authorize it. Authentication will not help.
        "409":
          description: The request could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal server error. An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
      requestBody:
        description: |
          Request body containing details of the order. Each dish ID should correspond to a dish in the database.
        required: true
        content:
          application/json:
            schema:
              properties:
                given_name:
                  type: string
                  pattern: "^[^\\s]*$"
                  example: "John"
                  description: The first name of the patron that placed the order. Cannot contain spaces.
                table_number:
                  type: integer
                  example: 8
                  nullable: true
                  description: |
                    The table number tells the staff where in the the patron is located. Set the value to `null` for a takeaway order.
                dish_ids:
                  type: array
                  items:
                    type: string
                  example:
                    - "692a4a34a46ecf001f35ac6f"
                    - "6a4a857c022eb7001f9b8972"
                    - "6b7c2441a0db43001f9bf377"
                  description: Contains the unique identifiers of dishes to add to the order.
              required:
                - table_number
                - dish_ids
